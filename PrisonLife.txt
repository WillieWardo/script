local Player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PrisonLifeGUI"
ScreenGui.Parent = CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 200, 0, 310)
MainFrame.Position = UDim2.new(0.5, -100, 0.5, -130)
MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
MainFrame.BorderSizePixel = 1
MainFrame.BorderColor3 = Color3.fromRGB(80, 80, 80)
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 20)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

-- RGB line under the title
local RGBLine = Instance.new("Frame")
RGBLine.Name = "RGBLine"
RGBLine.Size = UDim2.new(1, 0, 0, 2)
RGBLine.Position = UDim2.new(0, 0, 1, 0)
RGBLine.BorderSizePixel = 0
RGBLine.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
RGBLine.Parent = TitleBar

-- Smooth rainbow cycle
task.spawn(function()
    local colors = {
        Color3.fromRGB(255, 0, 0),   -- Red
        Color3.fromRGB(255, 127, 0), -- Orange
        Color3.fromRGB(255, 255, 0), -- Yellow
        Color3.fromRGB(0, 255, 0),   -- Green
        Color3.fromRGB(0, 0, 255),   -- Blue
        Color3.fromRGB(75, 0, 130),  -- Indigo
        Color3.fromRGB(148, 0, 211), -- Violet
    }

    while true do
        for _, col in ipairs(colors) do
            TweenService:Create(RGBLine, TweenInfo.new(2, Enum.EasingStyle.Linear), {
                BackgroundColor3 = col
            }):Play()
            task.wait(2)
        end
    end
end)

local TitleText = Instance.new("TextLabel")
TitleText.Name = "TitleText"
TitleText.Size = UDim2.new(1, -25, 1, 0)
TitleText.Position = UDim2.new(0, 5, 0, 0)
TitleText.BackgroundTransparency = 1
TitleText.Text = "Prison Life by: L5354"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextSize = 14
TitleText.Font = Enum.Font.Gotham
TitleText.TextXAlignment = Enum.TextXAlignment.Left
TitleText.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Position = UDim2.new(1, -20, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 14
CloseButton.Font = Enum.Font.Gotham
CloseButton.Parent = TitleBar
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, -10, 1, -30)
ContentFrame.Position = UDim2.new(0, 5, 0, 25)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 5)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Parent = ContentFrame

-- Variables for toggle states
local noclipEnabled = false
local walkspeedEnabled = false
local autoGunsEnabled = false
local killAuraEnabled = false
local originalWalkSpeed = 16
local noclipConnection = nil
local killAuraConnection = nil
local walkspeedConnection = nil
local autoGunsConnection = nil

local function createButton(name, text, order)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(1, 0, 0, 30)
    button.LayoutOrder = order
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.BorderSizePixel = 1
    button.BorderColor3 = Color3.fromRGB(100, 100, 100)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 14
    button.Font = Enum.Font.Gotham
    button.Parent = ContentFrame
    return button
end

-- Create all buttons
local AllGunsButton = createButton("AllGunsButton", "penis (lol)", 1)
local GetAllGunsButton = createButton("GetAllGunsButton", "Get All Guns", 2)
local JerkyButton = createButton("JerkyButton", "Jerky Script", 3)
local ESPButton = createButton("ESPButton", "ESP", 4)
local WalkSpeedButton = createButton("WalkSpeedButton", "+10 WalkSpeed: OFF", 5)
local NoclipButton = createButton("NoclipButton", "Noclip: OFF", 6)
local AutoGunsButton = createButton("AutoGunsButton", "Auto Guns: OFF", 7)
local KillAuraButton = createButton("KillAuraButton", "Kill Aura: OFF", 8)

-- Popup function
local function ShowPopup(text, color)
    color = color or Color3.fromRGB(30, 30, 30)
    
    local popup = Instance.new("TextLabel")
    popup.Size = UDim2.new(0, 300, 0, 60)
    popup.Position = UDim2.new(0.5, -125, 0, -70)
    popup.BackgroundColor3 = color
    popup.BorderSizePixel = 0
    popup.Text = text
    popup.TextColor3 = Color3.fromRGB(255, 255, 255)
    popup.TextSize = 20
    popup.Font = Enum.Font.GothamBold
    popup.Parent = ScreenGui
    popup.AnchorPoint = Vector2.new(0.5, 0)
    popup.TextTransparency = 1
    popup.BackgroundTransparency = 1

    TweenService:Create(popup, TweenInfo.new(0.5), {
        TextTransparency = 0,
        BackgroundTransparency = 0.1,
        Position = UDim2.new(0.5, -125, 0, 20)
    }):Play()

    task.wait(2.5)

    TweenService:Create(popup, TweenInfo.new(0.5), {
        TextTransparency = 1,
        BackgroundTransparency = 1,
        Position = UDim2.new(0.5, -125, 0, -70)
    }):Play()

    task.wait(1)
    popup:Destroy()
end

-- All Guns function
local function AllGuns()
    if not Player.Character then
        ShowPopup("No character found!", Color3.fromRGB(150, 0, 0))
        return
    end
    
    for i, v in pairs(Player.Character:GetChildren()) do
        if v:IsA("Tool") then
            v.Parent = Player.Backpack
        end
    end

    task.wait(0.5)
    
    local guns = {"M9", "AK-47", "Remington 870"}
    for _, gunName in pairs(guns) do
        if Player.Backpack:FindFirstChild(gunName) then
            Player.Backpack[gunName].Parent = Player.Character
        end
    end

    task.wait(0.1)
    
    if Player.Character:FindFirstChild("M9") then
        Player.Character.M9.GripPos = Vector3.new(0.9, 2, 0)
    end
    if Player.Character:FindFirstChild("Remington 870") then
        Player.Character["Remington 870"].GripPos = Vector3.new(0.9, 2, 2.1)
    end
    if Player.Character:FindFirstChild("AK-47") then
        Player.Character["AK-47"].GripPos = Vector3.new(0.9, 2, 6.4)
    end

    ShowPopup("All guns equipped successfully!", Color3.fromRGB(0, 150, 0))
end

-- Get All Guns function
local function GetAllGuns()
    local gun_tbl = {["Parent"] = nil, ["Position"] = nil}
    local gun_names = {"Remington 870", "AK-47", "M9"}

    if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then
        ShowPopup("Character not ready!", Color3.fromRGB(150, 0, 0))
        return
    end

    local function get_gun(gun)
        if not workspace.Prison_ITEMS or not workspace.Prison_ITEMS.giver then
            ShowPopup("Gun giver not found!", Color3.fromRGB(150, 0, 0))
            return
        end
        
        local gunModel = workspace.Prison_ITEMS.giver:FindFirstChild(gun)
        if not gunModel then
            ShowPopup(gun .. " not found!", Color3.fromRGB(150, 0, 0))
            return
        end
        
        gun_tbl.Parent = gunModel
        gun_tbl.Position = Player.Character.HumanoidRootPart.Position
        workspace.Remote.ItemHandler:InvokeServer(gun_tbl)
    end

    for _, gun in pairs(gun_names) do
        get_gun(gun)
        task.wait(0.5)
    end
    
    ShowPopup("All guns collected successfully!", Color3.fromRGB(0, 150, 0))
end

-- ESP function
local function LoadESP()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Blissful4992/ESPs/refs/heads/main/2D%20Box%20ESP/ESP%20%2B%20Health%20Bars.lua"))()
    ShowPopup("ESP loaded successfully!", Color3.fromRGB(0, 150, 0))
end

-- Noclip function
local function Noclip()
    noclipEnabled = not noclipEnabled
    NoclipButton.Text = "Noclip: " .. (noclipEnabled and "ON" or "OFF")
    
    if noclipEnabled then
        ShowPopup("Noclip enabled!", Color3.fromRGB(0, 150, 0))
        
        if noclipConnection then
            noclipConnection:Disconnect()
        end
        
        noclipConnection = RunService.Stepped:Connect(function()
            if noclipEnabled and Player.Character then
                for _, v in pairs(Player.Character:GetDescendants()) do
                    if v:IsA("BasePart") and v.CanCollide then
                        v.CanCollide = false
                    end
                end
            end
        end)
    else
        ShowPopup("Noclip disabled!", Color3.fromRGB(150, 0, 0))
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
    end
end

-- WalkSpeed function
local function updateWalkSpeed()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        if walkspeedEnabled then
            Player.Character.Humanoid.WalkSpeed = originalWalkSpeed + 10
        else
            Player.Character.Humanoid.WalkSpeed = originalWalkSpeed
        end
    end
end

local function WalkSpeed()
    walkspeedEnabled = not walkspeedEnabled
    WalkSpeedButton.Text = "+10 WalkSpeed: " .. (walkspeedEnabled and "ON" or "OFF")
    
    if walkspeedEnabled then
        ShowPopup("WalkSpeed increased by 10!", Color3.fromRGB(0, 150, 0))
        
        -- Store original walk speed
        if Player.Character and Player.Character:FindFirstChild("Humanoid") then
            originalWalkSpeed = Player.Character.Humanoid.WalkSpeed
        end
        
        updateWalkSpeed()
        
        if walkspeedConnection then
            walkspeedConnection:Disconnect()
        end
        
        -- Listen for character changes
        walkspeedConnection = Player.CharacterAdded:Connect(function(character)
            character:WaitForChild("Humanoid")
            if walkspeedEnabled then
                originalWalkSpeed = character.Humanoid.WalkSpeed
                character.Humanoid.WalkSpeed = originalWalkSpeed + 10
            else
                character.Humanoid.WalkSpeed = originalWalkSpeed
            end
        end)
    else
        ShowPopup("WalkSpeed reset to normal!", Color3.fromRGB(150, 0, 0))
        updateWalkSpeed()
        
        if walkspeedConnection then
            walkspeedConnection:Disconnect()
            walkspeedConnection = nil
        end
    end
end

-- Auto Guns function (collect only, no equip)
local function AutoGuns()
    autoGunsEnabled = not autoGunsEnabled
    AutoGunsButton.Text = "Auto Guns: " .. (autoGunsEnabled and "ON" or "OFF")
    
    if autoGunsEnabled then
        ShowPopup("Auto Guns enabled!", Color3.fromRGB(0, 150, 0))
        
        if autoGunsConnection then
            autoGunsConnection:Disconnect()
        end
        
        -- Only run when character is added (respawn)
        autoGunsConnection = Player.CharacterAdded:Connect(function(character)
            if autoGunsEnabled then
                character:WaitForChild("Humanoid")
                task.wait(3) -- Wait a bit after respawn
                GetAllGuns() -- Only collect guns
                -- AllGuns()  -- Not equipping automatically
            end
        end)
    else
        ShowPopup("Auto Guns disabled!", Color3.fromRGB(150, 0, 0))
        if autoGunsConnection then
            autoGunsConnection:Disconnect()
            autoGunsConnection = nil
        end
    end
end


-- Kill Aura function
local function KillAura()
    killAuraEnabled = not killAuraEnabled
    KillAuraButton.Text = "Kill Aura: " .. (killAuraEnabled and "ON" or "OFF")
    
    if killAuraEnabled then
        ShowPopup("Kill Aura enabled!", Color3.fromRGB(0, 150, 0))
        
        if killAuraConnection then
            killAuraConnection:Disconnect()
        end
        
        killAuraConnection = RunService.Heartbeat:Connect(function()
            if killAuraEnabled and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                for _, v in ipairs(game.Players:GetPlayers()) do
                    if v ~= Player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") then
                        local distance = (Player.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude
                        if distance < 10 then -- Attack range
                            game:GetService("ReplicatedStorage").meleeEvent:FireServer(v)
                        end
                    end
                end
            end
        end)
    else
        ShowPopup("Kill Aura disabled!", Color3.fromRGB(150, 0, 0))
        if killAuraConnection then
            killAuraConnection:Disconnect()
            killAuraConnection = nil
        end
    end
end

-- Connect button events
AllGunsButton.MouseButton1Click:Connect(AllGuns)
GetAllGunsButton.MouseButton1Click:Connect(GetAllGuns)
JerkyButton.MouseButton1Click:Connect(function()
    loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
    ShowPopup("Jerky script loaded!", Color3.fromRGB(0, 150, 0))
end)
ESPButton.MouseButton1Click:Connect(LoadESP)
WalkSpeedButton.MouseButton1Click:Connect(WalkSpeed)
NoclipButton.MouseButton1Click:Connect(Noclip)
AutoGunsButton.MouseButton1Click:Connect(AutoGuns)
KillAuraButton.MouseButton1Click:Connect(KillAura)

-- Dragging functionality
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Initial popup
task.delay(0.5, function()
    ShowPopup("Prison Life GUI Loaded!", Color3.fromRGB(30, 30, 150))
end)
